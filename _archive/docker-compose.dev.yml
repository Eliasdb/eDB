services:
    postgres:
        image: postgres:15-alpine
        container_name: postgres-dev
        user: postgres
        ports:
            - 5432:5432
        healthcheck:
            test: 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
            interval: '10s'
            timeout: '5s'
            retries: 5

    api:
        build:
            context: ./api
            dockerfile: Dockerfile.dev
        image: api:dev
        container_name: api-dev
        volumes:
            - ./api:/app
        environment:
            ConnectionStrings__DefaultConnection: ${CONNECTION_STRING}
        ports:
            - '9101:9101'
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - app-network

    frontend:
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        image: frontend:dev
        container_name: frontend-dev
        volumes:
            - ./client:/app
            - /app/node_modules
        ports:
            - '4200:4200'
        environment:
            NODE_ENV: development
        depends_on:
            - api
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgres_data:
