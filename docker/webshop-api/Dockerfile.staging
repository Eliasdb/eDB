# Base runtime image with required PHP extensions
FROM php:8.3-fpm-alpine AS runtime

RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS postgresql-dev linux-headers \
    && apk add --no-cache nginx bash postgresql-libs \
    && docker-php-ext-install sockets pdo pdo_pgsql \
    && apk del .build-deps


# Bring Composer into this image
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

WORKDIR /var/www
COPY apps/server/webshop-api /var/www

# Now Composer runs against THIS image (has ext-sockets), so no ignore flag needed
RUN composer install --no-dev --optimize-autoloader --no-interaction --no-progress \
    && php artisan package:discover || true

# Final stage (can be the same runtime layer)
FROM runtime AS final
WORKDIR /var/www
COPY --from=runtime /var/www /var/www

# Same as before
COPY docker/webshop-api/wait-for-postgres.sh /var/www/wait-for-postgres.sh
RUN chmod +x /var/www/wait-for-postgres.sh

COPY docker/webshop-api/nginx/nginx.conf /etc/nginx/nginx.conf
COPY docker/webshop-api/nginx/default.conf /etc/nginx/conf.d/default.conf

COPY docker/webshop-api/entrypoint.sh /var/www/entrypoint.sh
RUN chmod +x /var/www/entrypoint.sh

EXPOSE 8000
ENTRYPOINT ["/var/www/entrypoint.sh"]
