name: Production Deployment Workflow

on:
    push:
        branches:
            - main

jobs:
    version:
        name: Set Version
        runs-on: ubuntu-latest
        outputs:
            image_tag: ${{ steps.version.outputs.image_tag }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Fetch full commit history
            - name: Set Version
              id: version
              run: |
                  COMMIT_COUNT=$(git rev-list --count HEAD)
                  VERSION=v1.0.${COMMIT_COUNT}-prod
                  echo "image_tag=${VERSION}" >> $GITHUB_ENV
                  echo "::set-output name=image_tag::${VERSION}"

    setup-qemu:
        name: Set up QEMU for ARM64
        runs-on: ubuntu-latest
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
              with:
                  platforms: arm64

    deploy-backend:
        name: Build and Deploy Backend
        runs-on: ubuntu-latest
        needs: [version, setup-qemu]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
            - name: Clear NuGet Caches
              run: |
                  dotnet nuget locals all --clear
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Build and Push Backend Docker Image (ARM)
              uses: docker/build-push-action@v3
              with:
                  context: ./api
                  file: ./api/Dockerfile.prod
                  push: true
                  tags: ${{ env.DOCKER_IMAGE_API }}:${{ needs.version.outputs.image_tag }}
                  platforms: linux/arm64
            - name: Update API Deployment YAML with Image Tag
              run: |
                  sed "s/\${IMAGE_TAG}/${{ needs.version.outputs.image_tag }}/g" k8s/prod/api/api-deployment-template.prod.yaml > k8s/prod/api/api-deployment.prod.yaml
            - name: Debug API Deployment YAML
              run: |
                  echo "Updated API Deployment YAML:"
                  cat k8s/prod/api/api-deployment.prod.yaml
            - name: Validate API Deployment YAML
              run: kubectl apply --dry-run=client -f k8s/prod/api/api-deployment.prod.yaml
            - name: Deploy Backend to Kubernetes
              run: |
                  kubectl apply -f k8s/prod/api/api-deployment.prod.yaml
                  kubectl rollout status deployment/api-prod || kubectl rollout undo deployment/api-prod
            - name: Commit Updated API Deployment YAML
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add k8s/prod/api/api-deployment.prod.yaml
                  git commit -m "Update API deployment to ${{ needs.version.outputs.image_tag }}" || echo "No changes to commit"

        env:
            DOCKER_IMAGE_API: eliasdb/edb-api

    deploy-frontend:
        name: Build and Deploy Frontend
        runs-on: ubuntu-latest
        needs: [version, setup-qemu]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Build and Push Frontend Docker Image (ARM)
              uses: docker/build-push-action@v3
              with:
                  context: ./eDB
                  file: ./eDB/Dockerfile.prod
                  push: true
                  tags: ${{ env.DOCKER_IMAGE_FRONTEND }}:${{ needs.version.outputs.image_tag }}
                  platforms: linux/arm64
            - name: Update Frontend Deployment YAML with Image Tag
              run: |
                  sed "s/\${IMAGE_TAG}/${{ needs.version.outputs.image_tag }}/g" k8s/prod/eDB/frontend-deployment-template.prod.yaml > k8s/prod/eDB/frontend-deployment.prod.yaml
            - name: Debug Frontend Deployment YAML
              run: |
                  echo "Updated Frontend Deployment YAML:"
                  cat k8s/prod/eDB/frontend-deployment.prod.yaml
            - name: Validate Frontend Deployment YAML
              run: kubectl apply --dry-run=client -f k8s/prod/eDB/frontend-deployment.prod.yaml
            - name: Deploy Frontend to Kubernetes
              run: |
                  kubectl apply -f k8s/prod/eDB/frontend-deployment.prod.yaml
                  kubectl rollout status deployment/edb-nx-prod || kubectl rollout undo deployment/edb-nx-prod
            - name: Commit Updated Frontend Deployment YAML
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add k8s/prod/eDB/frontend-deployment.prod.yaml
                  git commit -m "Update Frontend deployment to ${{ needs.version.outputs.image_tag }}" || echo "No changes to commit"

        env:
            DOCKER_IMAGE_FRONTEND: eliasdb/edb-nx
