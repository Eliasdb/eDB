name: (Production) Pre-Merge Checks
on:
  pull_request:
    branches:
      - main

jobs:
  # ─────────────────────────────────────────────
  version:
    name: Set Version and Tag
    runs-on: self-hosted
    outputs:
      image_tag: ${{ steps.version.outputs.image_tag }}
    steps:
      - name: Set Version
        id: version
        run: |
          VERSION=v2.0
          echo "image_tag=${VERSION}" >> $GITHUB_ENV
          echo "image_tag=${VERSION}" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${{ steps.version.outputs.image_tag }}
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
              echo "Tag $TAG already exists. Skipping tag creation."
          else
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git tag $TAG
              git remote set-url origin https://$GITHUB_ACTOR:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
              git push origin $TAG
          fi
        shell: bash

  # ─────────────────────────────────────────────
  detect-affected:
    name: Detect Affected
    runs-on: self-hosted
    needs: version
    outputs:
      admin_changed: ${{ steps.detect.outputs.admin_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - run: npm install -g pnpm
      - run: pnpm install --frozen-lockfile

      - id: detect
        run: |
          AFFECTED=$(pnpm nx show projects --affected --plain --base=origin/main --head=HEAD)
          echo "Affected: $AFFECTED"
          echo "admin_changed=$(echo "$AFFECTED" | grep -q 'mfe-edb-admin' && echo true || echo false)" >> $GITHUB_OUTPUT

  # ─────────────────────────────────────────────
  lint:
    name: Lint Affected Projects
    runs-on: self-hosted
    needs:
      - version
      - detect-affected
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - run: npm install -g pnpm
      - run: pnpm install

      - name: Lint
        run: |
          pnpm nx affected --target=lint \
            --base=origin/main --head=HEAD \
            --parallel --exclude=mfe-edb-admin || true

  # ─────────────────────────────────────────────
  test:
    name: Test Affected Projects
    runs-on: self-hosted
    needs:
      - version
      - lint
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - run: npm install -g pnpm
      - run: pnpm install

      - name: Test
        run: |
          pnpm nx affected --target=test \
            --base=origin/main --head=HEAD \
            --parallel --exclude=mfe-edb-admin || true

  # ─────────────────────────────────────────────
  build:
    name: Build & Push Docker Images
    runs-on: self-hosted
    needs:
      - version
      - test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - run: npm install -g pnpm
      - run: pnpm install

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Build & Push Docker images (skip admin)
        run: |
          AFFECTED=$(pnpm nx show projects --affected --type=app \
            --base=origin/main --head=HEAD --plain --exclude=mfe-edb-admin)

          echo "Affected apps (non-admin): $AFFECTED"

          for app in $AFFECTED; do
            lower_app=$(echo "$app" | tr '[:upper:]' '[:lower:]')


            if [ "$lower_app" != "webshop-api" ] && [ "$app" != "wc-edb-user-account" ] && [ "$app" != "tools-invoices-api" ]; then
              echo "🏗️ Building $app"
              pnpm nx run "$app":build --configuration=production
            else
              echo "⚠️ Skipping NX build for $app"
            fi

            if [ "$app" = "wc-edb-user-account" ]; then
              echo "⚠️ Skipping Docker for $app"
              continue
            fi

            echo "🐳 Docker build & push for $app"
            docker build --platform linux/arm64 \
              -f "docker/$app/Dockerfile.prod" \
              -t "eliasdb/$lower_app:${{ needs.version.outputs.image_tag }}" .
            docker push "eliasdb/$lower_app:${{ needs.version.outputs.image_tag }}"
          done

  # ─────────────────────────────────────────────
  call-admin:
    name: Admin App CI
    needs:
      - detect-affected
      - version

    if: needs.detect-affected.outputs.admin_changed == 'true'
    uses: ./.github/workflows/admin-ci.production.yml
    with:
      image_tag: ${{ needs.version.outputs.image_tag }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
