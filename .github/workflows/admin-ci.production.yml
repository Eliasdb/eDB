# .github/workflows/admin-ci.production.yml
name: (PROD) Admin CI

on:
    workflow_call:
        inputs:
            image_tag:
                required: true
                type: string
        secrets:
            DOCKER_USERNAME:
                required: true
            DOCKER_TOKEN:
                required: true

jobs:
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    lint:
        name: Lint Admin Project
        runs-on: self-hosted
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: '20'
            - uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: '8.0'
            - run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
              working-directory: ./eDB
            - name: Lint eDB-admin
              working-directory: ./eDB
              run: pnpm nx lint eDB-admin

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    test:
        name: Test Admin Project
        runs-on: self-hosted
        needs: lint
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: '20'
            - uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: '8.0'
            - run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
              working-directory: ./eDB
            - name: Test eDB-admin
              working-directory: ./eDB
              run: pnpm nx test eDB-admin --passWithNoTests

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    build:
        name: Build & Push Admin App Docker Image (Production)
        runs-on: self-hosted
        needs: test
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-node@v3
              with:
                  node-version: '20'
            - uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: '8.0'
            - run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
              working-directory: ./eDB
            - name: Build Admin App
              working-directory: ./eDB
              run: |
                  pnpm nx build eDB-admin \
                    --configuration=production \
                    --base-href=/admin \
                    --deploy-url=/admin/
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Docker build & push
              working-directory: ./eDB
              run: |
                  TAG=${{ inputs.image_tag }}
                  echo "ðŸ“¦ Building & pushing admin image:$TAG"
                  docker build --platform linux/arm64 \
                    -f docker/eDB-admin/Dockerfile.prod \
                    -t eliasdb/edb-admin:$TAG .
                  docker push eliasdb/edb-admin:$TAG
