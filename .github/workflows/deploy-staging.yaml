name: Deploy to Staging

on:
    push:
        branches:
            - dev

jobs:
    derive-pr-tag:
        name: Derive Tag from Most Recent PR
        runs-on: [self-hosted]
        outputs:
            image_tag: ${{ steps.derive_tag.outputs.image_tag }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Derive Docker Image Tag
              id: derive_tag
              run: |
                  PR_NUMBER=$(git log --oneline -1 | grep -o 'Merge pull request #[0-9]*' | grep -o '[0-9]*')
                  if [ -z "$PR_NUMBER" ]; then
                      echo "Error: Could not derive PR number"
                      exit 1
                  fi
                  SHORT_SHA=$(git rev-parse --short HEAD)
                  VERSION=pr-${PR_NUMBER}-${SHORT_SHA}-staging
                  echo "image_tag=${VERSION}" >> $GITHUB_OUTPUT

    filter:
        name: Check if Backend or Frontend Code Changed
        runs-on: [self-hosted]
        needs: derive-pr-tag
        outputs:
            backend: ${{ steps.set_backend.outputs.backend }}
            frontend: ${{ steps.set_frontend.outputs.frontend }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 2

            - name: Set Backend Changed
              id: set_backend
              run: |
                  if git diff --name-only HEAD~1 HEAD | grep -q '^api/'; then
                    echo "backend=true" >> $GITHUB_OUTPUT
                  else
                    echo "backend=false" >> $GITHUB_OUTPUT
                  fi
              shell: bash

            - name: Set Frontend Changed
              id: set_frontend
              run: |
                  if git diff --name-only HEAD~1 HEAD | grep -q '^eDB/'; then
                    echo "frontend=true" >> $GITHUB_OUTPUT
                  else
                    echo "frontend=false" >> $GITHUB_OUTPUT
                  fi
              shell: bash

    deploy-backend:
        name: Deploy Backend to Staging
        runs-on: [self-hosted]
        needs: [filter, derive-pr-tag]
        if: ${{ needs.filter.outputs.backend == 'true' }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Configure Kubernetes for Staging
              run: |
                  mkdir -p ~/.kube
                  echo "${{ secrets.KUBE_STAGING_CONFIG }}" | base64 --decode > ~/.kube/config
                  chmod 600 ~/.kube/config
                  kubectl cluster-info

            - name: Replace Placeholder with Image Tag in API Deployment YAML
              run: |
                  set -e
                  sed "s/\${IMAGE_TAG}/${{ needs.derive-pr-tag.outputs.image_tag }}/g" k8s/staging/api/api-deployment-template.yaml > k8s/staging/api/api-deployment.yaml

            - name: Debug API Deployment YAML
              run: |
                  echo "Updated API Deployment YAML:" && cat k8s/staging/api/api-deployment.yaml

            - name: Validate API Deployment YAML
              run: |
                  kubectl apply --dry-run=client -f k8s/staging/api/api-deployment.yaml

            - name: Deploy API to Kubernetes
              run: |
                  kubectl apply -f k8s/staging/api/api-deployment.yaml
                  kubectl rollout status deployment/api-staging || kubectl rollout undo deployment/api-staging

    deploy-frontend:
        name: Deploy Frontend to Staging
        runs-on: [self-hosted]
        needs: [filter, derive-pr-tag]
        if: ${{ needs.filter.outputs.frontend == 'true' }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Configure Kubernetes for Staging
              run: |
                  mkdir -p ~/.kube
                  echo "${{ secrets.KUBE_STAGING_CONFIG }}" | base64 --decode > ~/.kube/config
                  chmod 600 ~/.kube/config
                  kubectl cluster-info

            - name: Replace Placeholder with Image Tag in Frontend Deployment YAML
              run: |
                  set -e
                  sed "s/\${IMAGE_TAG}/${{ needs.derive-pr-tag.outputs.image_tag }}/g" k8s/staging/eDB/frontend-deployment-template.yaml > k8s/staging/eDB/frontend-deployment.yaml

            - name: Debug Frontend Deployment YAML
              run: |
                  echo "Updated Frontend Deployment YAML:" && cat k8s/staging/eDB/frontend-deployment.yaml

            - name: Validate Frontend Deployment YAML
              run: |
                  kubectl apply --dry-run=client -f k8s/staging/eDB/frontend-deployment.yaml

            - name: Deploy Frontend to Kubernetes
              run: |
                  kubectl apply -f k8s/staging/eDB/frontend-deployment.yaml
                  kubectl rollout status deployment/edb-nx-staging || kubectl rollout undo deployment/edb-nx-staging
