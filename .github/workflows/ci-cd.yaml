name: CI/CD Pipeline

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        name: Build, Push, Validate, and Deploy
        runs-on: ubuntu-latest

        # Only run this job if the commit is not made by the GitHub Actions bot
        if: github.actor != 'github-actions[bot]'

        steps:
            # 0. Checkout the repository with full history
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Fetch all commit history

            # 0a. Set up QEMU for ARM64
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
              with:
                  platforms: arm64

            # 0b. Clear Buildx Cache
            - name: Clear Buildx Cache
              run: |
                  rm -rf /tmp/.buildx-cache-api
                  rm -rf /tmp/.buildx-cache-frontend

            # 1. Set Version (Automated Version Incrementation)
            - name: Set Version
              id: version
              run: |
                  set -e
                  # Fetch the total number of commits
                  COMMIT_COUNT=$(git rev-list --count HEAD)
                  echo "Commit count: $COMMIT_COUNT"
                  # Define the version based on commit count
                  VERSION=v1.0.${COMMIT_COUNT}-prod
                  echo "VERSION set to $VERSION"
                  # Export IMAGE_TAG as an environment variable
                  echo "IMAGE_TAG=${VERSION}" >> $GITHUB_ENV

            # 1a. Debug: Output IMAGE_TAG
            - name: Debug IMAGE_TAG
              run: |
                  echo "IMAGE_TAG is set to ${{ env.IMAGE_TAG }}"

            # 2. Set up Buildx with docker-container driver
            - name: Set up Buildx with docker-container driver
              uses: docker/setup-buildx-action@v2
              with:
                  driver: docker-container
                  buildkitd-flags: --allow-insecure-entitlement security.insecure

            # 3. Log in to Docker Hub
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            # 4. Build and Push API Docker image for ARM
            - name: Build and Push API Docker image (ARM)
              uses: docker/build-push-action@v3
              with:
                  context: ./api
                  file: ./api/Dockerfile.prod
                  push: true
                  tags: |
