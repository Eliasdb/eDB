name: (Production) Deployment

on:
  push:
    branches:
      - main

jobs:
  # ─────────────────────────────────────────────────────────────────────────────
  # 🏷️ Set Version from Latest Git Tag
  # ─────────────────────────────────────────────────────────────────────────────
  version:
    name: Set Version
    runs-on: [self-hosted]
    outputs:
      image_tag: ${{ steps.version.outputs.image_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Version from Latest Tag
        id: version
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-creatordate | head -n1)
          echo "image_tag=${LATEST_TAG}" >> $GITHUB_ENV
          echo "image_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

  # ─────────────────────────────────────────────────────────────────────────────
  # 🧪 Lint Kubernetes YAML Files
  # ─────────────────────────────────────────────────────────────────────────────
  #   name: Lint YAML Files
  #   runs-on: [self-hosted]
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #     - name: Install yamllint
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y yamllint
  #     - name: Run yamllint
  #       run: |
  #         yamllint k8s/prod/client/edb
  #         yamllint k8s/prod/client/mfe-edb-admin
  # ─────────────────────────────────────────────────────────────────────────────
  # 🧠 Detect Affected
  # ─────────────────────────────────────────────────────────────────────────────
  nx-affected:
    name: Detect Affected
    runs-on: self-hosted
    needs: [version]
    outputs:
      platform_api: ${{ steps.set_booleans.outputs.platform_api }}
      webshop_api: ${{ steps.set_booleans.outputs.webshop_api }}
      platform_app: ${{ steps.set_booleans.outputs.platform_app }}
      admin_app: ${{ steps.set_booleans.outputs.admin_app }}
      admin_api: ${{ steps.set_booleans.outputs.admin_api }}
      invoices_api: ${{ steps.set_booleans.outputs.invoices_api }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Print Affected
        run: |
          pnpm nx show projects --affected \
            --with-target=build \
            --base=$(git rev-parse HEAD^1) \
            --head=HEAD > affected.txt || true
          echo "Affected Projects:"
          cat affected.txt

      - name: Extract and set booleans for affected projects
        id: set_booleans
        run: |
          AFFECTED=$(cat affected.txt)
          echo "Affected Projects: $AFFECTED"

          PLATFORM_API=$(echo "$AFFECTED" | grep -xq "platform-api" && echo "true" || echo "false")
          WEBSHOP_API=$(echo "$AFFECTED" | grep -xq "webshop-api" && echo "true" || echo "false")
          PLATFORM_APP=$(echo "$AFFECTED" | grep -xq "edb" && echo "true" || echo "false")
          ADMIN_APP=$(echo "$AFFECTED" | grep -xq "mfe-edb-admin" && echo "true" || echo "false")
          ADMIN_API=$(echo "$AFFECTED" | grep -xq "admin-api" && echo "true" || echo "false")
          INVOICES_API=$(echo "$AFFECTED" | grep -xq "tools-invoices-api" && echo "true" || echo "false")

          echo "platform_api=${PLATFORM_API}" >> $GITHUB_OUTPUT
          echo "webshop_api=${WEBSHOP_API}" >> $GITHUB_OUTPUT
          echo "platform_app=${PLATFORM_APP}" >> $GITHUB_OUTPUT
          echo "admin_app=${ADMIN_APP}" >> $GITHUB_OUTPUT
          echo "admin_api=${ADMIN_API}" >> $GITHUB_OUTPUT
          echo "invoices_api=${INVOICES_API}" >> $GITHUB_OUTPUT      

          printf "\n📦 What Will Be Deployed:\n\
            🔌 APIs:\n\
              🚀 Platform API:  %s\n\
              🧠 Admin API:     %s\n\
              🛒 Webshop API:   %s\n\
              🧾 Invoice API:   %s\n\
            🧩 Apps:\n\
              📱 Platform App:  %s\n\
              👑 Admin App:     %s\n\n" \
            "$PLATFORM_API" "$ADMIN_API" "$WEBSHOP_API" "$INVOICES_API" "$PLATFORM_APP" "$ADMIN_APP"
        shell: bash

  # ─────────────────────────────────────────────────────────────────────────────
  # 🚀 Deploy Platform API to Production
  # ─────────────────────────────────────────────────────────────────────────────
  promote-platform-api:
    name: Promote Platform API to Prod (GitOps)
    runs-on: self-hosted
    needs: [nx-affected, version]
    if: ${{ needs.nx-affected.outputs.platform_api == 'true' }}
    steps:
      - uses: actions/checkout@v4

      # Install kustomize
      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3'

      - name: Bump image tag in prod overlay
        env:
          TAG: ${{ needs.version.outputs.image_tag }}
          IMAGE_NAME: eliasdb/platform-api # ⬅️ change if your repo name differs
        run: |
          set -euo pipefail
          cd k8s/product/platform-api/overlays/prod

          # Update image to use the new tag
          kustomize edit set image "${IMAGE_NAME}=${IMAGE_NAME}:${TAG}"

          echo "kustomization.yaml after bump:"
          grep -n "^images:" kustomization.yaml || true
          grep -n "${IMAGE_NAME}" kustomization.yaml || true

          # Sanity check the overlay builds
          kustomize build . >/dev/null

      - name: Create Promotion PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore(prod): promote platform-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          title: 'Promote platform-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          body: 'Promotes **platform-api** to `${{ needs.version.outputs.image_tag }}`. ArgoCD will deploy after merge.'
          branch: 'promote/platform-api-${{ needs.version.outputs.image_tag }}'
          delete-branch: true
          branch-suffix: short-commit-hash
          base: 'main'
          labels: |
            release
            prod

  # ─────────────────────────────────────────────────────────────────────────────
  # 🛒 Deploy Webshop API to Production
  # ─────────────────────────────────────────────────────────────────────────────
  promote-webshop-api:
    name: Promote Webshop API to Prod (GitOps)
    runs-on: self-hosted
    needs: [nx-affected, version]
    if: ${{ needs.nx-affected.outputs.webshop_api == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3'

      - name: Bump image tag in prod overlay
        env:
          TAG: ${{ needs.version.outputs.image_tag }}
          IMAGE_NAME: eliasdb/webshop-api
        run: |
          set -euo pipefail
          cd k8s/product/webshop-api/overlays/prod

          kustomize edit set image "${IMAGE_NAME}=${IMAGE_NAME}:${TAG}"

          echo "kustomization.yaml after bump:"
          grep -n "^images:" kustomization.yaml || true
          grep -n "${IMAGE_NAME}" kustomization.yaml || true

          kustomize build . >/dev/null

      - name: Create Promotion PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore(prod): promote webshop-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          title: 'Promote webshop-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          body: 'Promotes **webshop-api** to `${{ needs.version.outputs.image_tag }}`. ArgoCD will deploy after merge.'
          branch: 'promote/webshop-api-${{ needs.version.outputs.image_tag }}'
          delete-branch: true
          branch-suffix: short-commit-hash
          base: 'main'
          labels: |
            release
            prod

  # ─────────────────────────────────────────────────────────────────────────────
  # 🌐 Promote Platform App to Prod (GitOps)
  # ─────────────────────────────────────────────────────────────────────────────
  promote-platform-app:
    name: Promote Platform App to Prod (GitOps)
    runs-on: self-hosted
    needs: [nx-affected, version]
    if: ${{ needs.nx-affected.outputs.platform_app == 'true' }}
    steps:
      - uses: actions/checkout@v4

      # Install kustomize
      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3'

      - name: Bump image tag in prod overlay
        env:
          TAG: ${{ needs.version.outputs.image_tag }}
          # 👇 adjust if your platform client image name is different
          IMAGE_NAME: eliasdb/edb
        run: |
          set -euo pipefail
          cd k8s/product/platform-client/overlays/prod

          # Update image tag: <IMAGE_NAME>=<IMAGE_NAME>:<TAG>
          kustomize edit set image "${IMAGE_NAME}=${IMAGE_NAME}:${TAG}"

          echo "kustomization.yaml after bump:"
          grep -n "^images:" -n kustomization.yaml || true
          grep -n "${IMAGE_NAME}" kustomization.yaml || true

      - name: Create Promotion PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore(prod): promote platform-client to ${{ needs.version.outputs.image_tag }} [skip ci]'
          title: 'Promote platform-client to ${{ needs.version.outputs.image_tag }} [skip ci]'
          body: 'Promotes **platform-client** to `${{ needs.version.outputs.image_tag }}`. ArgoCD will deploy after merge.'
          branch: 'promote/platform-client-${{ needs.version.outputs.image_tag }}'
          delete-branch: true
          branch-suffix: short-commit-hash
          base: 'main'
          labels: |
            release
            prod
  # ─────────────────────────────────────────────────────────────────────────────
  # 👑 Promote Admin App to Prod (GitOps)
  # ─────────────────────────────────────────────────────────────────────────────
  promote-admin-app:
    name: Promote Admin App to Prod (GitOps)
    runs-on: self-hosted
    needs: [nx-affected, version]
    if: ${{ needs.nx-affected.outputs.admin_app == 'true' }}
    steps:
      - uses: actions/checkout@v4

      # Install kustomize
      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3'

      - name: Bump image tag in prod overlay
        env:
          TAG: ${{ needs.version.outputs.image_tag }}
        run: |
          cd k8s/product/admin-client/overlays/prod
          # Set eliasdb/edb-admin => eliasdb/edb-admin:${TAG}
          kustomize edit set image eliasdb/edb-admin=eliasdb/edb-admin:${TAG}
          echo "kustomization.yaml after bump:"
          grep -n "images:" -n kustomization.yaml -n || true
          grep -n "eliasdb/edb-admin" kustomization.yaml || true

      - name: Create Promotion PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore(prod): promote admin-client to ${{ needs.version.outputs.image_tag }} [skip ci]'
          title: 'Promote admin-client to ${{ needs.version.outputs.image_tag }} [skip ci]'
          body: 'Promotes **admin-client** to `${{ needs.version.outputs.image_tag }}`. ArgoCD will deploy after merge.'
          branch: 'promote/admin-client-${{ needs.version.outputs.image_tag }}'
          delete-branch: true
          branch-suffix: short-commit-hash
          base: 'main'
          labels: |
            release
            prod
  # ─────────────────────────────────────────────────────────────────────────────
  # 🧠 Deploy Admin API to Production
  # ─────────────────────────────────────────────────────────────────────────────
  promote-admin-api:
    name: Promote Admin API to Prod (GitOps)
    runs-on: self-hosted
    needs: [nx-affected, version]
    if: ${{ needs.nx-affected.outputs.admin_api == 'true' }}
    steps:
      - uses: actions/checkout@v4

      # Install kustomize (no yq needed)
      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3' # or latest

      - name: Bump image tag in prod overlay
        env:
          TAG: ${{ needs.version.outputs.image_tag }}
        run: |
          cd k8s/product/admin-api/overlays/prod
          # Set eliasdb/admin-api => eliasdb/admin-api:${TAG}
          kustomize edit set image eliasdb/admin-api=eliasdb/admin-api:${TAG}
          echo "kustomization.yaml after bump:"
          grep -n "images:" -n kustomization.yaml -n || true
          grep -n "eliasdb/admin-api" kustomization.yaml || true

      - name: Create Promotion PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore(prod): promote admin-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          title: 'Promote admin-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          body: 'Promotes **admin-api** to `${{ needs.version.outputs.image_tag }}`. ArgoCD will deploy after merge.'
          branch: 'promote/admin-api-${{ needs.version.outputs.image_tag }}'
          delete-branch: true # clean up merged promo branch
          branch-suffix: short-commit-hash # avoid collisions if tag repeats
          base: 'main'
          labels: |
            release
            prod
  # ─────────────────────────────────────────────────────────────────────────────
  # 🧾 Deploy Tools Invoices API to Production
  # ─────────────────────────────────────────────────────────────────────────────
  promote-tools-invoices-api:
    name: Promote Tools Invoices API to Prod (GitOps)
    runs-on: self-hosted
    needs: [nx-affected, version]
    if: ${{ needs.nx-affected.outputs.invoices_api == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.3'

      - name: Bump image tag in prod overlay
        env:
          TAG: ${{ needs.version.outputs.image_tag }}
          IMAGE_NAME: eliasdb/tools-invoices-api
        run: |
          set -euo pipefail
          cd k8s/product/tools-invoices-api/overlays/prod

          kustomize edit set image "${IMAGE_NAME}=${IMAGE_NAME}:${TAG}"

          echo "kustomization.yaml after bump:"
          grep -n "^images:" kustomization.yaml || true
          grep -n "${IMAGE_NAME}" kustomization.yaml || true

          kustomize build . >/dev/null

      - name: Create Promotion PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore(prod): promote tools-invoices-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          title: 'Promote tools-invoices-api to ${{ needs.version.outputs.image_tag }} [skip ci]'
          body: 'Promotes **tools-invoices-api** to `${{ needs.version.outputs.image_tag }}`. ArgoCD will deploy after merge.'
          branch: 'promote/tools-invoices-api-${{ needs.version.outputs.image_tag }}'
          delete-branch: true
          branch-suffix: short-commit-hash
          base: 'main'
          labels: |
            release
            prod
