name: Development Workflow

on:
    push:
        branches:
            - dev
        paths:
            - 'api/**' # Trigger backend-related changes
            - 'eDB/**' # Trigger frontend-related changes
    pull_request:
        branches:
            - main

jobs:
    filter:
        name: Check if Backend or Frontend Code Changed
        runs-on: ubuntu-latest
        outputs:
            backend: ${{ steps.filter.outputs.backend }}
            frontend: ${{ steps.filter.outputs.frontend }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Fetch full history for accurate comparisons

            - name: Determine Base for Comparison
              id: determine_base
              run: |
                  # Check if there's a parent commit
                  if git rev-parse HEAD~1 > /dev/null 2>&1; then
                    echo "base=HEAD~1" >> $GITHUB_OUTPUT
                  else
                    # Fallback to merge-base with origin/main
                    echo "base=$(git merge-base HEAD origin/main)" >> $GITHUB_OUTPUT
                  fi
              shell: bash

            - name: Filter Paths
              id: filter
              uses: dorny/paths-filter@v2
              with:
                  base: ${{ steps.determine_base.outputs.base }}
                  filters: |
                      backend:
                        - 'api/**'
                      frontend:
                        - 'eDB/**'

            - name: Debug Filter Outputs
              run: |
                  echo "Backend changed: ${{ steps.filter.outputs.backend }}"
                  echo "Frontend changed: ${{ steps.filter.outputs.frontend }}"

    lint:
        name: Lint Code
        runs-on: ubuntu-latest
        needs: filter
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            - name: Install pnpm
              run: corepack enable && corepack prepare pnpm@latest --activate

            - name: Install Dependencies
              run: pnpm install
              working-directory: ./eDB

            - name: Run Lint for All Projects
              run: pnpm nx run-many --target=lint --all --verbose || true
              working-directory: ./eDB

    test:
        name: Run Frontend Unit and Integration Tests
        runs-on: ubuntu-latest
        needs: filter
        if: ${{ needs.filter.outputs.frontend == 'true' }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            - name: Install pnpm
              run: corepack enable && corepack prepare pnpm@latest --activate

            - name: Install Dependencies
              run: pnpm install
              working-directory: ./eDB

            - name: Run Tests
              run: pnpm nx run-many --target=test --all --exclude=appointment-app --verbose || true
              working-directory: ./eDB

    build-backend:
        name: Build Backend
        runs-on: ubuntu-latest
        needs: [filter, lint, test]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Build Backend
              if: ${{ needs.filter.outputs.backend == 'true' }}
              run: dotnet build ./api/api.csproj --configuration Release

            - name: Skip Backend Build
              if: ${{ needs.filter.outputs.backend != 'true' }}
              run: echo "No backend changes detected. Skipping backend build."

    build-frontend:
        name: Build Frontend
        runs-on: ubuntu-latest
        needs: [filter, lint, test]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Install pnpm
              run: corepack enable && corepack prepare pnpm@latest --activate

            - name: Install Dependencies
              run: pnpm install
              working-directory: ./eDB

            - name: Build Frontend
              if: ${{ needs.filter.outputs.frontend == 'true' }}
              run: pnpm build

            - name: Skip Frontend Build
              if: ${{ needs.filter.outputs.frontend != 'true' }}
              run: echo "No frontend changes detected. Skipping frontend build."
